// <auto-generated />
using System;
using Bankai.MLApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Bankai.MLApi.Migrations
{
    [DbContext(typeof(MLApiDbContext))]
    [Migration("20240317120917__init")]
    partial class _init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Bankai.MLApi.Data.Entities.Dataset", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<byte[]>("CompressedData")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("character varying(512)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.HasKey("Id");

                    b.ToTable("Datasets");
                });

            modelBuilder.Entity("Bankai.MLApi.Data.Entities.Feature", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("IsTarget")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("ModelId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ModelId");

                    b.ToTable("Feature");
                });

            modelBuilder.Entity("Bankai.MLApi.Data.Entities.FeatureImportanceMetric", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModelId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ModelId");

                    b.ToTable("FeatureImportanceMetric");
                });

            modelBuilder.Entity("Bankai.MLApi.Data.Entities.HyperParameter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("ModelId")
                        .HasColumnType("uuid");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ModelId");

                    b.ToTable("HyperParameter");
                });

            modelBuilder.Entity("Bankai.MLApi.Data.Entities.Metric", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModelId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ModelId");

                    b.ToTable("Metric");
                });

            modelBuilder.Entity("Bankai.MLApi.Data.Entities.Model", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Algorithm")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<byte[]>("Data")
                        .HasColumnType("bytea");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("character varying(512)");

                    b.Property<bool>("Enabled")
                        .HasColumnType("boolean");

                    b.Property<int>("Engine")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.Property<int>("Prediction")
                        .HasColumnType("integer");

                    b.Property<int>("State")
                        .HasColumnType("integer");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<TimeSpan>("TrainDuration")
                        .HasColumnType("interval");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Models");
                });

            modelBuilder.Entity("Bankai.MLApi.Data.Entities.ParameterStatistics", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<double>("Count")
                        .HasColumnType("double precision");

                    b.Property<Guid?>("FeatureImportanceMetricId")
                        .HasColumnType("uuid");

                    b.Property<double>("Mean")
                        .HasColumnType("double precision");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("StandardDeviation")
                        .HasColumnType("double precision");

                    b.Property<double>("StandardError")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.HasIndex("FeatureImportanceMetricId");

                    b.ToTable("ParameterStatistics");
                });

            modelBuilder.Entity("DatasetModel", b =>
                {
                    b.Property<Guid>("DatasetsId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ModelsId")
                        .HasColumnType("uuid");

                    b.HasKey("DatasetsId", "ModelsId");

                    b.HasIndex("ModelsId");

                    b.ToTable("DatasetModel");
                });

            modelBuilder.Entity("Bankai.MLApi.Data.Entities.Feature", b =>
                {
                    b.HasOne("Bankai.MLApi.Data.Entities.Model", null)
                        .WithMany("Features")
                        .HasForeignKey("ModelId");
                });

            modelBuilder.Entity("Bankai.MLApi.Data.Entities.FeatureImportanceMetric", b =>
                {
                    b.HasOne("Bankai.MLApi.Data.Entities.Model", null)
                        .WithMany("FeatureImportance")
                        .HasForeignKey("ModelId");
                });

            modelBuilder.Entity("Bankai.MLApi.Data.Entities.HyperParameter", b =>
                {
                    b.HasOne("Bankai.MLApi.Data.Entities.Model", null)
                        .WithMany("HyperParameters")
                        .HasForeignKey("ModelId");
                });

            modelBuilder.Entity("Bankai.MLApi.Data.Entities.Metric", b =>
                {
                    b.HasOne("Bankai.MLApi.Data.Entities.Model", null)
                        .WithMany("Metrics")
                        .HasForeignKey("ModelId");
                });

            modelBuilder.Entity("Bankai.MLApi.Data.Entities.ParameterStatistics", b =>
                {
                    b.HasOne("Bankai.MLApi.Data.Entities.FeatureImportanceMetric", null)
                        .WithMany("Statistics")
                        .HasForeignKey("FeatureImportanceMetricId");
                });

            modelBuilder.Entity("DatasetModel", b =>
                {
                    b.HasOne("Bankai.MLApi.Data.Entities.Dataset", null)
                        .WithMany()
                        .HasForeignKey("DatasetsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bankai.MLApi.Data.Entities.Model", null)
                        .WithMany()
                        .HasForeignKey("ModelsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Bankai.MLApi.Data.Entities.FeatureImportanceMetric", b =>
                {
                    b.Navigation("Statistics");
                });

            modelBuilder.Entity("Bankai.MLApi.Data.Entities.Model", b =>
                {
                    b.Navigation("FeatureImportance");

                    b.Navigation("Features");

                    b.Navigation("HyperParameters");

                    b.Navigation("Metrics");
                });
#pragma warning restore 612, 618
        }
    }
}
